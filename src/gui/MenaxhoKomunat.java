/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

/**
 *
 * @author dfz
 */
import static BLL.Farmacia_.emri;
import BLL.Klienti;
import BLL.Komuna;
import BLL.Terapia;
import DAL.FarmaciaException;
import DAL.KlientiRepository;
import DAL.KomunaRepository;
import DAL.TerapiaRepository;
import gui.models.KomunaTableModel;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import net.sf.jasperreports.engine.JRDataSource;
import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.view.JasperViewer;
import static org.eclipse.persistence.internal.jpa.metadata.xml.XMLEntityMappingsReader.clear;

public class MenaxhoKomunat extends javax.swing.JInternalFrame {

    /**
     * Creates new form MenaxhoKomunat
     */
    KomunaRepository kre = new KomunaRepository();

    KlientiRepository kr = new KlientiRepository();

    TerapiaRepository tr = new TerapiaRepository();

    KomunaTableModel ktm;

    public MenaxhoKomunat() {
        initComponents();
        loadTable();
        tabelaSelectedIndexChange();
    }

    public void loadTable() {
        List<Komuna> list = kre.findAll();
        ktm = new KomunaTableModel(list);
        tabela.setModel(ktm);
        ktm.fireTableDataChanged();
    }

    private void tabelaSelectedIndexChange() {
        final ListSelectionModel rowSM = tabela.getSelectionModel();
        rowSM.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent Ise) {
                if (Ise.getValueIsAdjusting()) {
                    return;
                }
                ListSelectionModel rowSM = (ListSelectionModel) Ise.getSource();
                int selectedIndex = rowSM.getAnchorSelectionIndex();
                if (selectedIndex > - 1) {
                    Komuna k = (Komuna) ktm.getKomuna(selectedIndex);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        emri = new javax.swing.JTextField();
        emrik = new javax.swing.JLabel();
        fshijkomune = new javax.swing.JButton();
        shtokomune = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1160, 710));

        emrik.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        emrik.setText("Emri i komunes");

        fshijkomune.setBackground(new java.awt.Color(153, 0, 0));
        fshijkomune.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        fshijkomune.setForeground(new java.awt.Color(255, 255, 255));
        fshijkomune.setText("FSHIJ");
        fshijkomune.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fshijkomuneActionPerformed(evt);
            }
        });

        shtokomune.setBackground(new java.awt.Color(3, 165, 50));
        shtokomune.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        shtokomune.setForeground(new java.awt.Color(255, 255, 255));
        shtokomune.setText("SHTO");
        shtokomune.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                shtokomuneMouseClicked(evt);
            }
        });
        shtokomune.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shtokomuneActionPerformed(evt);
            }
        });

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabela);

        jButton1.setBackground(new java.awt.Color(204, 204, 204));
        jButton1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(51, 51, 51));
        jButton1.setText("PRAPA");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(emrik)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(shtokomune, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(emri, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fshijkomune, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(85, 85, 85)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 747, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emrik))
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fshijkomune)
                    .addComponent(shtokomune))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 19, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 633, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fshijkomuneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fshijkomuneActionPerformed
        // TODO add your handling code here:
        int row = tabela.getSelectedRow();
        if (row != -1) {
            Komuna k = (Komuna) ktm.getKomuna(row);
            List<Klienti> listaKlienteve = k.getKlientiList();
            if (listaKlienteve.isEmpty()) {
                Object[] ob = {"Po", "Jo"};
                int i = JOptionPane.showOptionDialog(this,
                        "A dëshironi ta fshini ?", "Fshirja",
                        JOptionPane.OK_OPTION,
                        JOptionPane.QUESTION_MESSAGE, null, ob, ob[1]);
                System.out.println("" + i);
                if (i == 0) {
                    kre.delete(k);
                    loadTable();
                }
            } else {
                Object[] ob = {"Po", "Jo"};
                int i = JOptionPane.showOptionDialog(this,
                        "Ekzistojne kliente te regjistruar me kete komune.Nese fshini komunen do fshihen te gjithe klientet"
                        + " me kete komune dhe te dhenat e tyre.Deshironi t'i fshini?", "Fshirja",
                        JOptionPane.OK_OPTION,
                        JOptionPane.QUESTION_MESSAGE, null, ob, ob[1]);
                System.out.println("" + i);
                if (i == 0) {

                    for (int j = 0; j < listaKlienteve.size(); j++) {
                        List<Terapia> t = listaKlienteve.get(j).getTerapiaList();
                        for (int l = 0; l < t.size(); l++) {
                            tr.deleteTerapia(t.get(l));
                        }
                        kr.deleteKlienti(listaKlienteve.get(j));
                    }
                    kre.delete(k);
                    loadTable();

                }
            }

            clear();
        } else {
            JOptionPane.showMessageDialog(this, "Nuk ke selektuar asgje!");
        }
    }//GEN-LAST:event_fshijkomuneActionPerformed

    private void shtokomuneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shtokomuneActionPerformed
        if (!emri.getText().trim().equals("")) {
            int row = tabela.getSelectedRow();
            if (row == -1) {
                Komuna k = new Komuna();
                try {
                    k.setEmriKomunes(emri.getText());
                } catch (FarmaciaException ex) {
                    Logger.getLogger(MenaxhoKomunat.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    kre.create(k);
                } catch (FarmaciaException ex) {
                    Logger.getLogger(MenaxhoKomunat.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                Komuna k = (Komuna) ktm.getKomuna(row);
                try {
                    k.setEmriKomunes(emri.getText());
                } catch (FarmaciaException ex) {
                    Logger.getLogger(MenaxhoKomunat.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            clear();
            loadTable();
        } else {
            JOptionPane.showMessageDialog(this, "Ju lutem plotesoni fushat obligative");
        }
    }//GEN-LAST:event_shtokomuneActionPerformed

    private void shtokomuneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shtokomuneMouseClicked

    }//GEN-LAST:event_shtokomuneMouseClicked
    public void clear(){
        emri.setText("");
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Home h = new Home();
        h.dashboard();
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField emri;
    private javax.swing.JLabel emrik;
    private javax.swing.JButton fshijkomune;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton shtokomune;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables
}
